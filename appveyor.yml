image: Visual Studio 2022
version: 1.0.{build}

configuration:
- Debug

platform: Any CPU

pull_requests:  
  do_not_increment_build_number: true

environment:
  # Don't report back to the mothership
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  JAVA_HOME: C:\Program Files\Java\jdk15
  SONAR_TOKEN:
    secure: fNmV/P8zSNwd3LWpzw2nnm807oe1Hr0gr11hTItGCXmnVQ0tHN1ESPUjLYjsXmpG
  SONAR_PROJECT: cortside_cortside.sqlreportapi
  RESTRICTED_WORDS:
    secure: y2oCk9wYmgBAzk4m1tsSFUOlcEePEjozzMCfC0p6NQI=

init:
- ps: $Env:LABEL = "CI" + $Env:APPVEYOR_BUILD_NUMBER.PadLeft(5, "0")
- ps: Get-ChildItem "Env:"

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

before_build:
- appveyor-retry dotnet restore src -v Minimal
- set DNX_BUILD_VERSION=%APPVEYOR_BUILD_NUMBER%
- dotnet --info
- ps: ./prebuild.ps1

build:
  publish_nuget: true
  publish_nuget_symbols: true
  include_nuget_references: true
  verbosity: minimal

build_script:
- ps: >-
    $version = $env:APPVEYOR_BUILD_VERSION;
    $analysisArgs = "";
    if (-not (Test-Path env:APPVEYOR_PULL_REQUEST_NUMBER)) {
        $branch = $Env:APPVEYOR_REPO_BRANCH;
        $analysisArgs = "/d:sonar.branch.name=""$branch""";
        if ($branch -ne "master") {
            $target = "develop";
            if ($branch -eq "develop" -or $branch -like "release/*" -or $branch -like "hotfix/*") {
                $target = "master";
            }
            $analysisArgs += " /d:sonar.newCode.referenceBranch=""$target""";
        }
    } else {
        $branch = $Env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH;
        $target = $Env:APPVEYOR_REPO_BRANCH;
        $commit = $Env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT;
        $pullRequestId = $Env:APPVEYOR_PULL_REQUEST_NUMBER;
        $analysisArgs = "/d:sonar.scm.revision=""$commit"" /d:sonar.pullrequest.key=""$pullRequestId"" /d:sonar.pullrequest.base=""$target"" /d:sonar.pullrequest.branch=""$branch""";
    }   
    $env:SOURCE_BRANCH="$branch";
    $env:TARGET_BRANCH="$target";
    $env:SONAR_ARGUMENTS="$analysisArgs";
    echo "building version $version from branch $branch targeting $target with analysis arguments of $analysisArgs";
- dotnet tool install --global dotnet-sonarscanner
- echo "%SONAR_TOKEN%"
- dotnet sonarscanner begin /o:"cortside" /k:"%SONAR_PROJECT%" /v:"%APPVEYOR_BUILD_VERSION%" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="%SONAR_TOKEN%" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" %SONAR_ARGUMENTS%
- dotnet build src --no-restore --configuration %Configuration% /property:"Version=%APPVEYOR_BUILD_VERSION%"
- dotnet test src --no-restore --no-build --collect:"XPlat Code Coverage" --settings ./src/coverlet.runsettings.xml /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
- dotnet sonarscanner end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- ps: >-
    $branch = $ENV:APPVEYOR_REPO_BRANCH;
    $fileVersion = $env:APPVEYOR_BUILD_VERSION;
    if($branch -ne 'master') {
        $fileVersion = "${fileVersion}-${branch}"; 
    }   
    
    $fileVersion = $fileVersion.replace("release/", "");
    $fileVersion = $fileVersion.replace("feature/", "");
    $fileVersion = $fileVersion.replace("bugfix/", "");
    dotnet pack src --include-symbols -p:SymbolPackageFormat=snupkg --configuration $env:configuration -o ((get-location).Path + '\artifacts') /property:Version=$fileVersion    
    dotnet publish -r win-x64 -c Debug /p:PublishSingleFile=true /p:PublishTrimmed=true --output publish/win-x64 .\src\Cortside.SqlReportApi.WebApi;
    dotnet publish -r linux-x64 -c Debug /p:PublishSingleFile=true /p:PublishTrimmed=true --output publish/linux-x64 .\src\Cortside.SqlReportApi.WebApi;
    dotnet publish -r linux-musl-x64 -c Debug /p:PublishSingleFile=true /p:PublishTrimmed=true --output publish/linux-musl-x64 .\src\Cortside.SqlReportApi.WebApi;
- cmd: 7z a sqlreport-api.zip -r src/sql/* %APPVEYOR_BUILD_FOLDER%\publish\*
- cmd: appveyor PushArtifact sqlreport-api.zip


cache:
  - '%USERPROFILE%\.nuget\packages'
  
nuget:
  disable_publish_on_pr: true
#  account_feed: true
#  project_feed: true
  
artifacts:
- path: sqlreport-api.zip
  name: deploy
deploy:
- provider: GitHub
  description: '$(appveyor_build_version)'
  auth_token:
    secure: PfMxiwJ07WiudGV8OdaK1gBnW4kpkcv6mTaCoFj2pdhNPy7QLC5jfSkB4OWwNo35
  artifact: deploy
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
- provider: GitHub
  description: '$(appveyor_build_version)-develop'
  auth_token:
    secure: PfMxiwJ07WiudGV8OdaK1gBnW4kpkcv6mTaCoFj2pdhNPy7QLC5jfSkB4OWwNo35
  artifact: deploy
  draft: false
  prerelease: true
  on:
    branch: develop                 

